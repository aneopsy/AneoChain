var cov_p2kj2vchx=function(){var path='/home/aneopsy/AneoChain/src/blockchain/transaction.js',hash='a0978d1624e6e8478bb6077ba9513a389af9e469',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/aneopsy/AneoChain/src/blockchain/transaction.js',statementMap:{'0':{start:{line:1,column:10},end:{line:1,column:26}},'1':{start:{line:2,column:19},end:{line:2,column:48}},'2':{start:{line:3,column:24},end:{line:3,column:58}},'3':{start:{line:4,column:34},end:{line:4,column:72}},'4':{start:{line:6,column:28},end:{line:6,column:29}},'5':{start:{line:40,column:4},end:{line:40,column:19}},'6':{start:{line:41,column:4},end:{line:41,column:21}},'7':{start:{line:42,column:4},end:{line:42,column:21}},'8':{start:{line:43,column:4},end:{line:46,column:6}},'9':{start:{line:51,column:4},end:{line:51,column:76}},'10':{start:{line:56,column:33},end:{line:56,column:59}},'11':{start:{line:58,column:4},end:{line:61,column:5}},'12':{start:{line:59,column:6},end:{line:59,column:63}},'13':{start:{line:60,column:6},end:{line:60,column:91}},'14':{start:{line:64,column:4},end:{line:76,column:25}},'15':{start:{line:65,column:24},end:{line:69,column:8}},'16':{start:{line:70,column:29},end:{line:70,column:109}},'17':{start:{line:72,column:6},end:{line:75,column:7}},'18':{start:{line:73,column:8},end:{line:73,column:90}},'19':{start:{line:74,column:8},end:{line:74,column:121}},'20':{start:{line:79,column:4},end:{line:104,column:5}},'21':{start:{line:81,column:30},end:{line:81,column:78}},'22':{start:{line:82,column:31},end:{line:82,column:80}},'23':{start:{line:84,column:58},end:{line:84,column:102}},'24':{start:{line:86,column:6},end:{line:92,column:7}},'25':{start:{line:87,column:8},end:{line:87,column:126}},'26':{start:{line:88,column:8},end:{line:91,column:11}},'27':{start:{line:94,column:24},end:{line:94,column:87}},'28':{start:{line:96,column:6},end:{line:103,column:7}},'29':{start:{line:97,column:8},end:{line:97,column:125}},'30':{start:{line:98,column:8},end:{line:102,column:11}},'31':{start:{line:106,column:4},end:{line:106,column:16}},'32':{start:{line:110,column:22},end:{line:110,column:39}},'33':{start:{line:111,column:4},end:{line:113,column:13}},'34':{start:{line:112,column:6},end:{line:112,column:31}},'35':{start:{line:114,column:4},end:{line:114,column:44}},'36':{start:{line:115,column:4},end:{line:115,column:23}},'37':{start:{line:119,column:0},end:{line:119,column:29}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:39,column:2},end:{line:39,column:3}},loc:{start:{line:39,column:14},end:{line:47,column:3}},line:39},'1':{name:'(anonymous_1)',decl:{start:{line:49,column:2},end:{line:49,column:3}},loc:{start:{line:49,column:11},end:{line:52,column:3}},line:49},'2':{name:'(anonymous_2)',decl:{start:{line:54,column:2},end:{line:54,column:3}},loc:{start:{line:54,column:10},end:{line:107,column:3}},line:54},'3':{name:'(anonymous_3)',decl:{start:{line:64,column:10},end:{line:64,column:11}},loc:{start:{line:64,column:23},end:{line:76,column:5}},line:64},'4':{name:'(anonymous_4)',decl:{start:{line:109,column:2},end:{line:109,column:3}},loc:{start:{line:109,column:24},end:{line:116,column:3}},line:109},'5':{name:'(anonymous_5)',decl:{start:{line:111,column:24},end:{line:111,column:25}},loc:{start:{line:111,column:40},end:{line:113,column:5}},line:111}},branchMap:{'0':{loc:{start:{line:58,column:4},end:{line:61,column:5}},type:'if',locations:[{start:{line:58,column:4},end:{line:61,column:5}},{start:{line:58,column:4},end:{line:61,column:5}}],line:58},'1':{loc:{start:{line:72,column:6},end:{line:75,column:7}},type:'if',locations:[{start:{line:72,column:6},end:{line:75,column:7}},{start:{line:72,column:6},end:{line:75,column:7}}],line:72},'2':{loc:{start:{line:79,column:4},end:{line:104,column:5}},type:'if',locations:[{start:{line:79,column:4},end:{line:104,column:5}},{start:{line:79,column:4},end:{line:104,column:5}}],line:79},'3':{loc:{start:{line:86,column:6},end:{line:92,column:7}},type:'if',locations:[{start:{line:86,column:6},end:{line:92,column:7}},{start:{line:86,column:6},end:{line:92,column:7}}],line:86},'4':{loc:{start:{line:96,column:6},end:{line:103,column:7}},type:'if',locations:[{start:{line:96,column:6},end:{line:103,column:7}},{start:{line:96,column:6},end:{line:103,column:7}}],line:96}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const R=(++cov_p2kj2vchx.s[0],require('ramda'));const CryptoUtil=(++cov_p2kj2vchx.s[1],require('../util/cryptoUtil'));const CryptoEdDSAUtil=(++cov_p2kj2vchx.s[2],require('../util/cryptoEdDSAUtil'));const TransactionAssertionError=(++cov_p2kj2vchx.s[3],require('./transactionAssertionError'));const FEE_PER_TRANSACTION=(++cov_p2kj2vchx.s[4],1);/*
Transaction structure:
{ // Transaction
    "id": "84286bba8d...7477efdae1", // random id (64 bytes)
    "hash": "f697d4ae63...c1e85f0ac3", // hash taken from the contents of the transaction: sha256 (id + data) (64 bytes)
    "type": "regular", // transaction type (regular, fee, reward)
    "data": {
        "inputs": [ // Transaction inputs
            {
                "transaction": "9e765ad30c...e908b32f0c", // transaction hash taken from a previous unspent transaction output (64 bytes)
                "index": "0", // index of the transaction taken from a previous unspent transaction output
                "amount": 5000000000, // amount of satoshis
                "address": "dda3ce5aa5...b409bf3fdc", // from address (64 bytes)
                "signature": "27d911cac0...6486adbf05" // transaction input hash: sha256 (transaction + index + amount + address) signed with owner address's secret key (128 bytes)
            }
        ],
        "outputs": [ // Transaction outputs
            {
                "amount": 10000, // amount of satoshis
                "address": "4f8293356d...b53e8c5b25" // to address (64 bytes)
            },
            {
                "amount": 4999989999, // amount of satoshis
                "address": "dda3ce5aa5...b409bf3fdc" // change address (64 bytes)
            }
        ]
    }
}
*/class Transaction{construct(){++cov_p2kj2vchx.f[0];++cov_p2kj2vchx.s[5];this.id=null;++cov_p2kj2vchx.s[6];this.hash=null;++cov_p2kj2vchx.s[7];this.type=null;++cov_p2kj2vchx.s[8];this.data={inputs:[],outputs:[]};}toHash(){++cov_p2kj2vchx.f[1];++cov_p2kj2vchx.s[9];// INFO: Usually there are different implementations of the hash algorithm, for example: https://en.bitcoin.it/wiki/Hashcash
return CryptoUtil.hash(this.id+this.type+JSON.stringify(this.data));}check(){++cov_p2kj2vchx.f[2];// Check if the transaction hash is correct
let isTransactionHashValid=(++cov_p2kj2vchx.s[10],this.hash==this.toHash());++cov_p2kj2vchx.s[11];if(!isTransactionHashValid){++cov_p2kj2vchx.b[0][0];++cov_p2kj2vchx.s[12];console.error(`Invalid transaction hash '${this.hash}'`);++cov_p2kj2vchx.s[13];throw new TransactionAssertionError(`Invalid transaction hash '${this.hash}'`,this);}else{++cov_p2kj2vchx.b[0][1];}// Check if the signature of all input transactions are correct (transaction data is signed by the public key of the address)
++cov_p2kj2vchx.s[14];R.map(txInput=>{++cov_p2kj2vchx.f[3];let txInputHash=(++cov_p2kj2vchx.s[15],CryptoUtil.hash({transaction:txInput.transaction,index:txInput.index,address:txInput.address}));let isValidSignature=(++cov_p2kj2vchx.s[16],CryptoEdDSAUtil.verifySignature(txInput.address,txInput.signature,txInputHash));++cov_p2kj2vchx.s[17];if(!isValidSignature){++cov_p2kj2vchx.b[1][0];++cov_p2kj2vchx.s[18];console.error(`Invalid transaction input signature '${JSON.stringify(txInput)}'`);++cov_p2kj2vchx.s[19];throw new TransactionAssertionError(`Invalid transaction input signature '${JSON.stringify(txInput)}'`,txInput);}else{++cov_p2kj2vchx.b[1][1];}},this.data.inputs);++cov_p2kj2vchx.s[20];if(this.type=='regular'){++cov_p2kj2vchx.b[2][0];// Check if the sum of input transactions are greater than output transactions, it needs to leave some room for the transaction fee
let sumOfInputsAmount=(++cov_p2kj2vchx.s[21],R.sum(R.map(R.prop('amount'),this.data.inputs)));let sumOfOutputsAmount=(++cov_p2kj2vchx.s[22],R.sum(R.map(R.prop('amount'),this.data.outputs)));let isInputsAmountGreaterOrEqualThanOutputsAmount=(++cov_p2kj2vchx.s[23],R.gte(sumOfInputsAmount,sumOfOutputsAmount));++cov_p2kj2vchx.s[24];if(!isInputsAmountGreaterOrEqualThanOutputsAmount){++cov_p2kj2vchx.b[3][0];++cov_p2kj2vchx.s[25];console.error(`Invalid transaction balanceL: inputs sum '${sumOfInputsAmount}', outputs sum '${sumOfOutputsAmount}'`);++cov_p2kj2vchx.s[26];throw new TransactionAssertionError(`Invalid transaction balance: inputs sum '${sumOfInputsAmount}', outputs sum '${sumOfOutputsAmount}'`,{sumOfInputsAmount,sumOfOutputsAmount});}else{++cov_p2kj2vchx.b[3][1];}let isEnoughFee=(++cov_p2kj2vchx.s[27],sumOfInputsAmount-sumOfOutputsAmount>=FEE_PER_TRANSACTION);// 1 because the fee is 1 satoshi per transaction
++cov_p2kj2vchx.s[28];if(!isEnoughFee){++cov_p2kj2vchx.b[4][0];++cov_p2kj2vchx.s[29];console.error(`Not enough fee: expected '${FEE_PER_TRANSACTION}' got '${sumOfInputsAmount-sumOfOutputsAmount}'`);++cov_p2kj2vchx.s[30];throw new TransactionAssertionError(`Not enough fee: expected '${FEE_PER_TRANSACTION}' got '${sumOfInputsAmount-sumOfOutputsAmount}'`,{sumOfInputsAmount,sumOfOutputsAmount,FEE_PER_TRANSACTION});}else{++cov_p2kj2vchx.b[4][1];}}else{++cov_p2kj2vchx.b[2][1];}++cov_p2kj2vchx.s[31];return true;}static fromJson(data){++cov_p2kj2vchx.f[4];let transaction=(++cov_p2kj2vchx.s[32],new Transaction());++cov_p2kj2vchx.s[33];R.forEachObjIndexed((value,key)=>{++cov_p2kj2vchx.f[5];++cov_p2kj2vchx.s[34];transaction[key]=value;},data);++cov_p2kj2vchx.s[35];transaction.hash=transaction.toHash();++cov_p2kj2vchx.s[36];return transaction;}}++cov_p2kj2vchx.s[37];module.exports=Transaction;