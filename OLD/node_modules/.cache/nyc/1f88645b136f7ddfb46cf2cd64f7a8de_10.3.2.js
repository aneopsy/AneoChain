var cov_1fubdcmc30=function(){var path='/home/aneopsy/AneoChain/src/operator/wallet.js',hash='cbb8f55b35f886e45d9dd237c5d8b24f73d60ebe',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/aneopsy/AneoChain/src/operator/wallet.js',statementMap:{'0':{start:{line:1,column:10},end:{line:1,column:26}},'1':{start:{line:2,column:19},end:{line:2,column:48}},'2':{start:{line:3,column:24},end:{line:3,column:58}},'3':{start:{line:7,column:8},end:{line:7,column:23}},'4':{start:{line:8,column:8},end:{line:8,column:33}},'5':{start:{line:9,column:8},end:{line:9,column:27}},'6':{start:{line:10,column:8},end:{line:10,column:27}},'7':{start:{line:15,column:8},end:{line:17,column:9}},'8':{start:{line:16,column:12},end:{line:16,column:34}},'9':{start:{line:19,column:26},end:{line:19,column:47}},'10':{start:{line:22,column:20},end:{line:22,column:129}},'11':{start:{line:23,column:25},end:{line:23,column:72}},'12':{start:{line:24,column:25},end:{line:28,column:9}},'13':{start:{line:29,column:8},end:{line:29,column:39}},'14':{start:{line:30,column:8},end:{line:30,column:36}},'15':{start:{line:34,column:8},end:{line:34,column:72}},'16':{start:{line:35,column:8},end:{line:35,column:27}},'17':{start:{line:39,column:8},end:{line:39,column:92}},'18':{start:{line:43,column:8},end:{line:43,column:100}},'19':{start:{line:47,column:8},end:{line:47,column:98}},'20':{start:{line:51,column:8},end:{line:51,column:57}},'21':{start:{line:55,column:21},end:{line:55,column:33}},'22':{start:{line:56,column:8},end:{line:56,column:42}},'23':{start:{line:57,column:8},end:{line:57,column:56}},'24':{start:{line:58,column:8},end:{line:58,column:22}},'25':{start:{line:62,column:21},end:{line:62,column:33}},'26':{start:{line:63,column:8},end:{line:63,column:42}},'27':{start:{line:64,column:8},end:{line:64,column:43}},'28':{start:{line:65,column:8},end:{line:65,column:22}},'29':{start:{line:69,column:21},end:{line:69,column:33}},'30':{start:{line:70,column:8},end:{line:70,column:76}},'31':{start:{line:70,column:46},end:{line:70,column:66}},'32':{start:{line:71,column:8},end:{line:71,column:22}},'33':{start:{line:75,column:0},end:{line:75,column:24}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:6,column:4},end:{line:6,column:5}},loc:{start:{line:6,column:18},end:{line:11,column:5}},line:6},'1':{name:'(anonymous_1)',decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:22},end:{line:31,column:5}},line:13},'2':{name:'(anonymous_2)',decl:{start:{line:33,column:4},end:{line:33,column:5}},loc:{start:{line:33,column:21},end:{line:36,column:5}},line:33},'3':{name:'(anonymous_3)',decl:{start:{line:38,column:4},end:{line:38,column:5}},loc:{start:{line:38,column:29},end:{line:40,column:5}},line:38},'4':{name:'(anonymous_4)',decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:37},end:{line:44,column:5}},line:42},'5':{name:'(anonymous_5)',decl:{start:{line:46,column:4},end:{line:46,column:5}},loc:{start:{line:46,column:35},end:{line:48,column:5}},line:46},'6':{name:'(anonymous_6)',decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:19},end:{line:52,column:5}},line:50},'7':{name:'(anonymous_7)',decl:{start:{line:54,column:4},end:{line:54,column:5}},loc:{start:{line:54,column:34},end:{line:59,column:5}},line:54},'8':{name:'(anonymous_8)',decl:{start:{line:61,column:4},end:{line:61,column:5}},loc:{start:{line:61,column:34},end:{line:66,column:5}},line:61},'9':{name:'(anonymous_9)',decl:{start:{line:68,column:4},end:{line:68,column:5}},loc:{start:{line:68,column:26},end:{line:72,column:5}},line:68},'10':{name:'(anonymous_10)',decl:{start:{line:70,column:28},end:{line:70,column:29}},loc:{start:{line:70,column:44},end:{line:70,column:68}},line:70}},branchMap:{'0':{loc:{start:{line:15,column:8},end:{line:17,column:9}},type:'if',locations:[{start:{line:15,column:8},end:{line:17,column:9}},{start:{line:15,column:8},end:{line:17,column:9}}],line:15},'1':{loc:{start:{line:22,column:20},end:{line:22,column:129}},type:'cond-expr',locations:[{start:{line:22,column:43},end:{line:22,column:54}},{start:{line:22,column:57},end:{line:22,column:129}}],line:22}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const R=(++cov_1fubdcmc30.s[0],require('ramda'));const CryptoUtil=(++cov_1fubdcmc30.s[1],require('../util/cryptoUtil'));const CryptoEdDSAUtil=(++cov_1fubdcmc30.s[2],require('../util/cryptoEdDSAUtil'));class Wallet{constructor(){++cov_1fubdcmc30.f[0];++cov_1fubdcmc30.s[3];this.id=null;++cov_1fubdcmc30.s[4];this.passwordHash=null;++cov_1fubdcmc30.s[5];this.secret=null;++cov_1fubdcmc30.s[6];this.keyPairs=[];}generateAddress(){++cov_1fubdcmc30.f[1];++cov_1fubdcmc30.s[7];// If secret is null means it is a brand new wallet
if(this.secret==null){++cov_1fubdcmc30.b[0][0];++cov_1fubdcmc30.s[8];this.generateSecret();}else{++cov_1fubdcmc30.b[0][1];}let lastKeyPair=(++cov_1fubdcmc30.s[9],R.last(this.keyPairs));// Generate next seed based on the first secret or a new secret from the last key pair.
let seed=(++cov_1fubdcmc30.s[10],lastKeyPair==null?(++cov_1fubdcmc30.b[1][0],this.secret):(++cov_1fubdcmc30.b[1][1],CryptoEdDSAUtil.generateSecret(R.propOr(null,'secretKey',lastKeyPair))));let keyPairRaw=(++cov_1fubdcmc30.s[11],CryptoEdDSAUtil.generateKeyPairFromSecret(seed));let newKeyPair=(++cov_1fubdcmc30.s[12],{index:this.keyPairs.length+1,secretKey:CryptoEdDSAUtil.toHex(keyPairRaw.getSecret()),publicKey:CryptoEdDSAUtil.toHex(keyPairRaw.getPublic())});++cov_1fubdcmc30.s[13];this.keyPairs.push(newKeyPair);++cov_1fubdcmc30.s[14];return newKeyPair.publicKey;}generateSecret(){++cov_1fubdcmc30.f[2];++cov_1fubdcmc30.s[15];this.secret=CryptoEdDSAUtil.generateSecret(this.passwordHash);++cov_1fubdcmc30.s[16];return this.secret;}getAddressByIndex(index){++cov_1fubdcmc30.f[3];++cov_1fubdcmc30.s[17];return R.propOr(null,'publicKey',R.find(R.propEq('index',index),this.keyPairs));}getAddressByPublicKey(publicKey){++cov_1fubdcmc30.f[4];++cov_1fubdcmc30.s[18];return R.propOr(null,'publicKey',R.find(R.propEq('publicKey',publicKey),this.keyPairs));}getSecretKeyByAddress(address){++cov_1fubdcmc30.f[5];++cov_1fubdcmc30.s[19];return R.propOr(null,'secretKey',R.find(R.propEq('publicKey',address),this.keyPairs));}getAddresses(){++cov_1fubdcmc30.f[6];++cov_1fubdcmc30.s[20];return R.map(R.prop('publicKey'),this.keyPairs);}static fromPassword(password){++cov_1fubdcmc30.f[7];let wallet=(++cov_1fubdcmc30.s[21],new Wallet());++cov_1fubdcmc30.s[22];wallet.id=CryptoUtil.randomId();++cov_1fubdcmc30.s[23];wallet.passwordHash=CryptoUtil.hash(password);++cov_1fubdcmc30.s[24];return wallet;}static fromHash(passwordHash){++cov_1fubdcmc30.f[8];let wallet=(++cov_1fubdcmc30.s[25],new Wallet());++cov_1fubdcmc30.s[26];wallet.id=CryptoUtil.randomId();++cov_1fubdcmc30.s[27];wallet.passwordHash=passwordHash;++cov_1fubdcmc30.s[28];return wallet;}static fromJson(data){++cov_1fubdcmc30.f[9];let wallet=(++cov_1fubdcmc30.s[29],new Wallet());++cov_1fubdcmc30.s[30];R.forEachObjIndexed((value,key)=>{++cov_1fubdcmc30.f[10];++cov_1fubdcmc30.s[31];wallet[key]=value;},data);++cov_1fubdcmc30.s[32];return wallet;}}++cov_1fubdcmc30.s[33];module.exports=Wallet;