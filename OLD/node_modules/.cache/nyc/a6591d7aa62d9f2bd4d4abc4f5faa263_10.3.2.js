var cov_1flth9dxb=function(){var path='/home/aneopsy/AneoChain/src/operator/index.js',hash='8a224118c3447865cc53260eb53ab9f8f6b2ffa8',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/aneopsy/AneoChain/src/operator/index.js',statementMap:{'0':{start:{line:1,column:10},end:{line:1,column:26}},'1':{start:{line:2,column:16},end:{line:2,column:36}},'2':{start:{line:3,column:15},end:{line:3,column:34}},'3':{start:{line:4,column:20},end:{line:4,column:56}},'4':{start:{line:5,column:27},end:{line:5,column:58}},'5':{start:{line:6,column:11},end:{line:6,column:32}},'6':{start:{line:7,column:22},end:{line:7,column:54}},'7':{start:{line:9,column:22},end:{line:9,column:36}},'8':{start:{line:13,column:8},end:{line:13,column:80}},'9':{start:{line:16,column:8},end:{line:16,column:45}},'10':{start:{line:17,column:8},end:{line:17,column:37}},'11':{start:{line:21,column:8},end:{line:21,column:34}},'12':{start:{line:22,column:8},end:{line:22,column:36}},'13':{start:{line:23,column:8},end:{line:23,column:22}},'14':{start:{line:27,column:24},end:{line:27,column:53}},'15':{start:{line:28,column:8},end:{line:28,column:41}},'16':{start:{line:32,column:24},end:{line:32,column:45}},'17':{start:{line:33,column:8},end:{line:33,column:41}},'18':{start:{line:37,column:21},end:{line:37,column:49}},'19':{start:{line:38,column:8},end:{line:38,column:94}},'20':{start:{line:38,column:28},end:{line:38,column:94}},'21':{start:{line:40,column:8},end:{line:40,column:51}},'22':{start:{line:44,column:8},end:{line:44,column:28}},'23':{start:{line:48,column:8},end:{line:48,column:83}},'24':{start:{line:48,column:36},end:{line:48,column:65}},'25':{start:{line:52,column:21},end:{line:52,column:49}},'26':{start:{line:53,column:8},end:{line:53,column:94}},'27':{start:{line:53,column:28},end:{line:53,column:94}},'28':{start:{line:55,column:22},end:{line:55,column:46}},'29':{start:{line:56,column:8},end:{line:56,column:36}},'30':{start:{line:57,column:8},end:{line:57,column:23}},'31':{start:{line:61,column:21},end:{line:61,column:49}},'32':{start:{line:62,column:8},end:{line:62,column:94}},'33':{start:{line:62,column:28},end:{line:62,column:94}},'34':{start:{line:64,column:24},end:{line:64,column:45}},'35':{start:{line:65,column:8},end:{line:65,column:25}},'36':{start:{line:69,column:21},end:{line:69,column:49}},'37':{start:{line:70,column:8},end:{line:70,column:94}},'38':{start:{line:70,column:28},end:{line:70,column:94}},'39':{start:{line:72,column:27},end:{line:72,column:66}},'40':{start:{line:73,column:8},end:{line:73,column:125}},'41':{start:{line:73,column:34},end:{line:73,column:125}},'42':{start:{line:75,column:8},end:{line:75,column:28}},'43':{start:{line:79,column:22},end:{line:79,column:67}},'44':{start:{line:80,column:19},end:{line:80,column:76}},'45':{start:{line:81,column:8},end:{line:81,column:52}},'46':{start:{line:85,column:19},end:{line:85,column:82}},'47':{start:{line:86,column:21},end:{line:86,column:49}},'48':{start:{line:88,column:8},end:{line:88,column:94}},'49':{start:{line:88,column:28},end:{line:88,column:94}},'50':{start:{line:90,column:24},end:{line:90,column:67}},'51':{start:{line:92,column:8},end:{line:92,column:139}},'52':{start:{line:92,column:31},end:{line:92,column:139}},'53':{start:{line:94,column:17},end:{line:94,column:41}},'54':{start:{line:95,column:8},end:{line:95,column:22}},'55':{start:{line:96,column:8},end:{line:96,column:35}},'56':{start:{line:97,column:8},end:{line:97,column:52}},'57':{start:{line:98,column:8},end:{line:98,column:18}},'58':{start:{line:99,column:8},end:{line:99,column:27}},'59':{start:{line:101,column:8},end:{line:101,column:48}},'60':{start:{line:105,column:0},end:{line:105,column:26}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:36},end:{line:18,column:5}},line:12},'1':{name:'(anonymous_1)',decl:{start:{line:20,column:4},end:{line:20,column:5}},loc:{start:{line:20,column:22},end:{line:24,column:5}},line:20},'2':{name:'(anonymous_2)',decl:{start:{line:26,column:4},end:{line:26,column:5}},loc:{start:{line:26,column:39},end:{line:29,column:5}},line:26},'3':{name:'(anonymous_3)',decl:{start:{line:31,column:4},end:{line:31,column:5}},loc:{start:{line:31,column:31},end:{line:34,column:5}},line:31},'4':{name:'(anonymous_4)',decl:{start:{line:36,column:4},end:{line:36,column:5}},loc:{start:{line:36,column:48},end:{line:41,column:5}},line:36},'5':{name:'(anonymous_5)',decl:{start:{line:43,column:4},end:{line:43,column:5}},loc:{start:{line:43,column:17},end:{line:45,column:5}},line:43},'6':{name:'(anonymous_6)',decl:{start:{line:47,column:4},end:{line:47,column:5}},loc:{start:{line:47,column:28},end:{line:49,column:5}},line:47},'7':{name:'(anonymous_7)',decl:{start:{line:48,column:22},end:{line:48,column:23}},loc:{start:{line:48,column:34},end:{line:48,column:67}},line:48},'8':{name:'(anonymous_8)',decl:{start:{line:51,column:4},end:{line:51,column:5}},loc:{start:{line:51,column:39},end:{line:58,column:5}},line:51},'9':{name:'(anonymous_9)',decl:{start:{line:60,column:4},end:{line:60,column:5}},loc:{start:{line:60,column:36},end:{line:66,column:5}},line:60},'10':{name:'(anonymous_10)',decl:{start:{line:68,column:4},end:{line:68,column:5}},loc:{start:{line:68,column:45},end:{line:76,column:5}},line:68},'11':{name:'(anonymous_11)',decl:{start:{line:78,column:4},end:{line:78,column:5}},loc:{start:{line:78,column:52},end:{line:82,column:5}},line:78},'12':{name:'(anonymous_12)',decl:{start:{line:84,column:4},end:{line:84,column:5}},loc:{start:{line:84,column:85},end:{line:102,column:5}},line:84}},branchMap:{'0':{loc:{start:{line:38,column:8},end:{line:38,column:94}},type:'if',locations:[{start:{line:38,column:8},end:{line:38,column:94}},{start:{line:38,column:8},end:{line:38,column:94}}],line:38},'1':{loc:{start:{line:53,column:8},end:{line:53,column:94}},type:'if',locations:[{start:{line:53,column:8},end:{line:53,column:94}},{start:{line:53,column:8},end:{line:53,column:94}}],line:53},'2':{loc:{start:{line:62,column:8},end:{line:62,column:94}},type:'if',locations:[{start:{line:62,column:8},end:{line:62,column:94}},{start:{line:62,column:8},end:{line:62,column:94}}],line:62},'3':{loc:{start:{line:70,column:8},end:{line:70,column:94}},type:'if',locations:[{start:{line:70,column:8},end:{line:70,column:94}},{start:{line:70,column:8},end:{line:70,column:94}}],line:70},'4':{loc:{start:{line:73,column:8},end:{line:73,column:125}},type:'if',locations:[{start:{line:73,column:8},end:{line:73,column:125}},{start:{line:73,column:8},end:{line:73,column:125}}],line:73},'5':{loc:{start:{line:88,column:8},end:{line:88,column:94}},type:'if',locations:[{start:{line:88,column:8},end:{line:88,column:94}},{start:{line:88,column:8},end:{line:88,column:94}}],line:88},'6':{loc:{start:{line:92,column:8},end:{line:92,column:139}},type:'if',locations:[{start:{line:92,column:8},end:{line:92,column:139}},{start:{line:92,column:8},end:{line:92,column:139}}],line:92},'7':{loc:{start:{line:97,column:18},end:{line:97,column:50}},type:'binary-expr',locations:[{start:{line:97,column:18},end:{line:97,column:33}},{start:{line:97,column:37},end:{line:97,column:50}}],line:97}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const R=(++cov_1flth9dxb.s[0],require('ramda'));const Wallets=(++cov_1flth9dxb.s[1],require('./wallets'));const Wallet=(++cov_1flth9dxb.s[2],require('./wallet'));const Transaction=(++cov_1flth9dxb.s[3],require('../blockchain/transaction'));const TransactionBuilder=(++cov_1flth9dxb.s[4],require('./transactionBuilder'));const Db=(++cov_1flth9dxb.s[5],require('../util/db'));const ArgumentError=(++cov_1flth9dxb.s[6],require('../util/argumentError'));const OPERATOR_FILE=(++cov_1flth9dxb.s[7],'wallets.json');class Operator{constructor(dbName,blockchain){++cov_1flth9dxb.f[0];++cov_1flth9dxb.s[8];this.db=new Db('data/'+dbName+'/'+OPERATOR_FILE,new Wallets());// INFO: In this implementation the database is a file and every time data is saved it rewrites the file, probably it should be a more robust database for performance reasons
++cov_1flth9dxb.s[9];this.wallets=this.db.read(Wallets);++cov_1flth9dxb.s[10];this.blockchain=blockchain;}addWallet(wallet){++cov_1flth9dxb.f[1];++cov_1flth9dxb.s[11];this.wallets.push(wallet);++cov_1flth9dxb.s[12];this.db.write(this.wallets);++cov_1flth9dxb.s[13];return wallet;}createWalletFromPassword(password){++cov_1flth9dxb.f[2];let newWallet=(++cov_1flth9dxb.s[14],Wallet.fromPassword(password));++cov_1flth9dxb.s[15];return this.addWallet(newWallet);}createWalletFromHash(hash){++cov_1flth9dxb.f[3];let newWallet=(++cov_1flth9dxb.s[16],Wallet.fromHash(hash));++cov_1flth9dxb.s[17];return this.addWallet(newWallet);}checkWalletPassword(walletId,passwordHash){++cov_1flth9dxb.f[4];let wallet=(++cov_1flth9dxb.s[18],this.getWalletById(walletId));++cov_1flth9dxb.s[19];if(wallet==null){++cov_1flth9dxb.b[0][0];++cov_1flth9dxb.s[20];throw new ArgumentError(`Wallet not found with id '${walletId}'`);}else{++cov_1flth9dxb.b[0][1];}++cov_1flth9dxb.s[21];return wallet.passwordHash==passwordHash;}getWallets(){++cov_1flth9dxb.f[5];++cov_1flth9dxb.s[22];return this.wallets;}getWalletById(walletId){++cov_1flth9dxb.f[6];++cov_1flth9dxb.s[23];return R.find(wallet=>{++cov_1flth9dxb.f[7];++cov_1flth9dxb.s[24];return wallet.id==walletId;},this.wallets);}generateAddressForWallet(walletId){++cov_1flth9dxb.f[8];let wallet=(++cov_1flth9dxb.s[25],this.getWalletById(walletId));++cov_1flth9dxb.s[26];if(wallet==null){++cov_1flth9dxb.b[1][0];++cov_1flth9dxb.s[27];throw new ArgumentError(`Wallet not found with id '${walletId}'`);}else{++cov_1flth9dxb.b[1][1];}let address=(++cov_1flth9dxb.s[28],wallet.generateAddress());++cov_1flth9dxb.s[29];this.db.write(this.wallets);++cov_1flth9dxb.s[30];return address;}getAddressesForWallet(walletId){++cov_1flth9dxb.f[9];let wallet=(++cov_1flth9dxb.s[31],this.getWalletById(walletId));++cov_1flth9dxb.s[32];if(wallet==null){++cov_1flth9dxb.b[2][0];++cov_1flth9dxb.s[33];throw new ArgumentError(`Wallet not found with id '${walletId}'`);}else{++cov_1flth9dxb.b[2][1];}let addresses=(++cov_1flth9dxb.s[34],wallet.getAddresses());++cov_1flth9dxb.s[35];return addresses;}getAddressForWallet(walletId,addressId){++cov_1flth9dxb.f[10];let wallet=(++cov_1flth9dxb.s[36],this.getWalletById(walletId));++cov_1flth9dxb.s[37];if(wallet==null){++cov_1flth9dxb.b[3][0];++cov_1flth9dxb.s[38];throw new ArgumentError(`Wallet not found with id '${walletId}'`);}else{++cov_1flth9dxb.b[3][1];}let addressFound=(++cov_1flth9dxb.s[39],wallet.getAddressByPublicKey(addressId));++cov_1flth9dxb.s[40];if(addressFound==null){++cov_1flth9dxb.b[4][0];++cov_1flth9dxb.s[41];throw new ArgumentError(`Address not found with id '${addressId}' for wallet ${walletId}`);}else{++cov_1flth9dxb.b[4][1];}++cov_1flth9dxb.s[42];return addressFound;}getBalanceForWalletAddress(walletId,addressId){++cov_1flth9dxb.f[11];let address=(++cov_1flth9dxb.s[43],this.getAddressForWallet(walletId,addressId));let utxo=(++cov_1flth9dxb.s[44],this.blockchain.getUnspentTransactionsForAddress(address));++cov_1flth9dxb.s[45];return R.sum(R.map(R.prop('amount'),utxo));}createTransaction(walletId,fromAddressId,toAddressId,amount,changeAddressId){++cov_1flth9dxb.f[12];let utxo=(++cov_1flth9dxb.s[46],this.blockchain.getUnspentTransactionsForAddress(fromAddressId));let wallet=(++cov_1flth9dxb.s[47],this.getWalletById(walletId));++cov_1flth9dxb.s[48];if(wallet==null){++cov_1flth9dxb.b[5][0];++cov_1flth9dxb.s[49];throw new ArgumentError(`Wallet not found with id '${walletId}'`);}else{++cov_1flth9dxb.b[5][1];}let secretKey=(++cov_1flth9dxb.s[50],wallet.getSecretKeyByAddress(fromAddressId));++cov_1flth9dxb.s[51];if(secretKey==null){++cov_1flth9dxb.b[6][0];++cov_1flth9dxb.s[52];throw new ArgumentError(`Secret key not found with Wallet id '${walletId}' and address '${fromAddressId}'`);}else{++cov_1flth9dxb.b[6][1];}let tx=(++cov_1flth9dxb.s[53],new TransactionBuilder());++cov_1flth9dxb.s[54];tx.from(utxo);++cov_1flth9dxb.s[55];tx.to(toAddressId,amount);++cov_1flth9dxb.s[56];tx.change((++cov_1flth9dxb.b[7][0],changeAddressId)||(++cov_1flth9dxb.b[7][1],fromAddressId));++cov_1flth9dxb.s[57];tx.fee(1);++cov_1flth9dxb.s[58];tx.sign(secretKey);++cov_1flth9dxb.s[59];return Transaction.fromJson(tx.build());}}++cov_1flth9dxb.s[60];module.exports=Operator;