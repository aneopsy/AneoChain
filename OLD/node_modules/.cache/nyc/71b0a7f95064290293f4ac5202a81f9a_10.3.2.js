var cov_1gnuf5576r=function(){var path='/home/aneopsy/AneoChain/src/util/cryptoUtil.js',hash='246f1fc20756cc09f0c55fa63d5253a85010e18b',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/aneopsy/AneoChain/src/util/cryptoUtil.js',statementMap:{'0':{start:{line:1,column:15},end:{line:1,column:32}},'1':{start:{line:5,column:20},end:{line:5,column:82}},'2':{start:{line:6,column:18},end:{line:6,column:77}},'3':{start:{line:7,column:4},end:{line:7,column:19}},'4':{start:{line:11,column:4},end:{line:11,column:68}},'5':{start:{line:15,column:0},end:{line:15,column:28}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:4,column:2},end:{line:4,column:3}},loc:{start:{line:4,column:19},end:{line:8,column:3}},line:4},'1':{name:'(anonymous_1)',decl:{start:{line:10,column:2},end:{line:10,column:3}},loc:{start:{line:10,column:29},end:{line:12,column:3}},line:10}},branchMap:{'0':{loc:{start:{line:5,column:20},end:{line:5,column:82}},type:'cond-expr',locations:[{start:{line:5,column:46},end:{line:5,column:65}},{start:{line:5,column:68},end:{line:5,column:82}}],line:5},'1':{loc:{start:{line:10,column:18},end:{line:10,column:27}},type:'default-arg',locations:[{start:{line:10,column:25},end:{line:10,column:27}}],line:10}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},f:{'0':0,'1':0},b:{'0':[0,0],'1':[0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const crypto=(++cov_1gnuf5576r.s[0],require('crypto'));class CryptoUtil{static hash(any){++cov_1gnuf5576r.f[0];let anyString=(++cov_1gnuf5576r.s[1],typeof any=='object'?(++cov_1gnuf5576r.b[0][0],JSON.stringify(any)):(++cov_1gnuf5576r.b[0][1],any.toString()));let anyHash=(++cov_1gnuf5576r.s[2],crypto.createHash('sha256').update(anyString).digest('hex'));++cov_1gnuf5576r.s[3];return anyHash;}static randomId(size=(++cov_1gnuf5576r.b[1][0],64)){++cov_1gnuf5576r.f[1];++cov_1gnuf5576r.s[4];return crypto.randomBytes(Math.floor(size/2)).toString('hex');}}++cov_1gnuf5576r.s[5];module.exports=CryptoUtil;